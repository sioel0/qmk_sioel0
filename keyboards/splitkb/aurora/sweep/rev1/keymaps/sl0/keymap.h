#ifndef KEYMAP_H
#define KEYMAP_H

#define SPC KC_SPC

// custom keys for mod toggle
#define LA(kc) LALT_T(kc)
#define LS(kc) LSFT_T(kc)
#define LG(kc) LGUI_T(kc)
#define LC(kc) LCTL_T(kc)
#define RA(kc) RALT_T(kc)
#define RS(kc) RSFT_T(kc)
#define RG(kc) RGUI_T(kc)
#define RC(kc) RCTL_T(kc)
#define OM(kc) OSM(MOD_ ## kc)

// custom keys for layer toggle
#define NAV_TAB LT(_NAV, KC_TAB)
#define HYP_BSPC LT(_HYP, KC_BSPC)
#define SYM_ENT LT(_SYM, KC_ENT)

// tmux and general shortcuts
#define CTL_A LCTL(KC_A)
#define CTL_Z LCTL(KC_Z)
#define CTL_S LCTL(KC_S)
#define CTL_C LCTL(KC_C)
#define CTL_V LCTL(KC_V)
#define CTL_D LCTL(KC_D)
#define CTL_L LCTL(KC_L)
#define CTL_K LCTL(KC_K)
#define CTL_P LCTL(KC_P)
#define CTL_N LCTL(KC_N)
#define CTL_F LCTL(KC_F)
#define CTL_L LCTL(KC_L)
#define CTL_X LCTL(KC_X)
#define CTL_W LCTL(KC_W)

// hyprland shortcuts
#define CLOSE LALT(LSFT(KC_Q))
#define EXIT LALT(LSFT(KC_E))
#define OPENTERM LALT(KC_ENT)
#define MASTSWP LALT(LSFT(KC_ENT))
#define DMENU LALT(KC_D)
#define LOCK LALT(LSFT(KC_X))
#define FULLSCR LALT(KC_M)
#define FOCLEFT LALT(KC_H)
#define FOCDOWN LALT(KC_J)
#define FOCUP LALT(KC_K)
#define FOCRIGHT LALT(KC_L)
#define MOVLEFT LALT(LSFT(KC_H))
#define MOVDOWN LALT(LSFT(KC_J))
#define MOVUP LALT(LSFT(KC_K))
#define MOVRIGHT LALT(LSFT(KC_L))
#define FOCWSP1 LALT(KC_1)
#define FOCWSP2 LALT(KC_2)
#define FOCWSP3 LALT(KC_3)
#define FOCWSP4 LALT(KC_4)
#define FOCWSP5 LALT(KC_5)
#define MOVWSP1 LALT(LSFT(KC_1))
#define MOVWSP2 LALT(LSFT(KC_2))
#define MOVWSP3 LALT(LSFT(KC_3))
#define MOVWSP4 LALT(LSFT(KC_4))
#define MOVWSP5 LALT(LSFT(KC_5))


// LAYERS
enum layers {
  _COL,
  _QWE,
  _NAV,
  _SYM,
  _NUM,
  _HYP,
};

// key override settings
const key_override_t sbpc_delete = ko_make_basic(MOD_MASK_SHIFT, HYP_BSPC, KC_DEL);

const key_override_t **key_overrides = (const key_override_t *[]) {
  &sbpc_delete,
  NULL,
};

// sioel0 logo
static const char sioel0_logo[] = { // 32x64
  0x00, 0x00, 0xc0, 0xa0, 0xa0, 0x20, 0x00, 0x20, 0xe8, 0x00, 0xc0, 0x20, 0x20, 0x20, 0xc0, 0x00,
  0xc0, 0xa0, 0xa0, 0xa0, 0xc0, 0x00, 0xf8, 0x00, 0x00, 0xf0, 0x08, 0x88, 0x48, 0xf0, 0x00, 0x00,
  0x00, 0x00, 0x04, 0x04, 0x04, 0x03, 0x00, 0x00, 0x07, 0x00, 0x03, 0x04, 0x04, 0x04, 0x03, 0x00,
  0x03, 0x04, 0x04, 0x04, 0x02, 0x00, 0x07, 0x04, 0x00, 0x03, 0x05, 0x04, 0x04, 0x03, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0x08, 0x40, 0x08, 0x00, 0xa0, 0x00, 0x00, 0x1c, 0x20, 0xc8, 0x08, 0xe8, 0x08,
  0xf8, 0x00, 0xe8, 0x00, 0xe8, 0x20, 0x20, 0x20, 0x20, 0xa0, 0x20, 0xe0, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x10, 0x7f, 0x50, 0x50, 0x52, 0x50, 0x00, 0x50, 0xf8, 0x0d, 0x08, 0x0d, 0x08, 0x0d, 0x08,
  0x0d, 0x08, 0x0d, 0x08, 0x0d, 0xf8, 0x50, 0x00, 0x50, 0x50, 0x50, 0x5f, 0x40, 0x40, 0xf8, 0x48,
  0x00, 0xc5, 0x50, 0x44, 0x51, 0x41, 0x55, 0x00, 0x55, 0xff, 0x80, 0x87, 0x85, 0x87, 0x82, 0x82,
  0x82, 0x86, 0x82, 0x86, 0x80, 0xff, 0x55, 0x00, 0x55, 0x14, 0x15, 0x94, 0x25, 0x44, 0x47, 0x40,
  0x00, 0x7f, 0x00, 0x02, 0x00, 0x0a, 0x00, 0x2a, 0x00, 0x00, 0x05, 0x00, 0x15, 0x00, 0xfd, 0x00,
  0x1d, 0x10, 0xfd, 0x10, 0x55, 0x50, 0x50, 0x57, 0xd5, 0x07, 0x00, 0xa8, 0x02, 0xa8, 0x02, 0xa8,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x60, 0x60, 0x80, 0x81, 0x00,
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x06, 0x06, 0x01, 0x01, 0x00,
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const char github_qr[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xfe, 0x82, 0xba, 0xba, 0xba, 0x82, 0xfe, 0x00, 0xae, 0x08, 0xfc, 0x24, 0xe6, 0x00, 0xa2,
	0x0a, 0xca, 0x52, 0xa2, 0x34, 0xd8, 0x00, 0xfe, 0x82, 0xba, 0xba, 0xba, 0x82, 0xfe, 0x00, 0x00,
	0x00, 0x26, 0x78, 0x58, 0x16, 0x8e, 0x46, 0xaa, 0x0a, 0xe2, 0x22, 0x1d, 0xb6, 0x17, 0xff, 0x40,
	0xec, 0x6b, 0xda, 0x7b, 0xb5, 0x81, 0x96, 0xf0, 0x7c, 0xce, 0x50, 0xce, 0x46, 0xf2, 0x00, 0x00,
	0x00, 0xbf, 0xb9, 0xb3, 0x85, 0x87, 0x9c, 0xaa, 0x1b, 0xd8, 0xa2, 0xc9, 0xdd, 0x47, 0x24, 0xf6,
	0xcd, 0xa0, 0xec, 0x48, 0x9f, 0xe2, 0x22, 0xb0, 0x21, 0xed, 0xfa, 0x35, 0x24, 0x09, 0x00, 0x00,
	0x00, 0x3f, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x3f, 0x00, 0x27, 0x18, 0x32, 0x14, 0x10, 0x32, 0x3b,
	0x1f, 0x25, 0x2d, 0x0c, 0x23, 0x2b, 0x0e, 0x32, 0x1a, 0x2b, 0x12, 0x18, 0x08, 0x1f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void render_sioel0_logo(void);
void render_github_qr(void);

#endif
